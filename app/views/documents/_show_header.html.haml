.row
  .col-xs-12
    %h3= @document.title
.row
  .col-xs-6
    %dl.dl-horizontal
      %dt Ze samosprávy
      %dd= link_to @document.local_administration_unit.title, polymorphic_path(Document, 'q[local_administration_unit_id_eq]' => @document.local_administration_unit)
      / Test that document is realy stored, unfortunately there is no such
      / method in dragonfly. It is possible to do fast only for FileStorage.
      / FIXME: if this will be needed make pull request to Dragonfly gem
      - if @document.document_storage && (@document.document_storage.job.size rescue nil)
        %dt Archiv
        %dd= link_to 'Stáhnout', @document.document_storage.url
      - if @document.edesky_document_id
        %dt Staženo z
        %dd= link_to 'edesky.cz', "http://edesky.cz/dokument/#{@document.edesky_document_id}"

    -if current_user && current_user.lau_permitted?(@document.local_administration_unit)
      %h4 Metadata
      %dl.dl-horizontal
        %dt Viditelnost
        %dd
          - klass = @document.published ? :published : :private
          %span{class: klass}= @document.published ? 'Veřejně dostuplný' : 'Veřejnosti nedostuplný'
        %dt Vytvořeno
        %dd= l @document.created_at
        %dt Text extrahován
        %dd= @document.plain_text_at ? l(@document.plain_text_at) : '-'
        %dt Upraveno
        %dd= l @document.updated_at
        %dt Status
        %dd= t(@document.status, scope: [:las, :document, :status], default: @document.status)
        %dt Zpracováno
        %dd= @document.parsed_at ? l(@document.parsed_at) : '-'


  .col-xs-6
    %dl.dl-horizontal
      %dt Orginální zdroj
      %dd= link_to @document.url, @document.url
      %dt Nalezeno adres
      %dd= @document.events.accessible_by(current_ability).count
      -if @document.pii_public_until
        %dt
          = (@document.pii_public_until > Time.now) ? 'Bude staženo' : 'Bylo staženo'
        %dd
          %span{class: 'pii'} Dokument pravdědopobně obsahuje osobní údaje a bude smazán dne
          = l @document.pii_public_until


  - location = Shape.joins(:events).merge(@events).where(events: {source_id: @document.id, source_type: 'Document'}).location
  - if location
    - location_params = "15/#{location[1]}/#{location[0]}"
    %span{style: 'float:right'}= link_to 'Zobraz zvýrazněny všechny nemovitosti tohoto dokumentu',
      map_path('q[source_id_eq]' => @document.id, 'q[source_type_eq]' => 'Document', activeTab: 'filter', anchor: location_params),
      :class => 'btn btn-success'


