.page-header
  %h1 Dokumenty

-# .btn-group.span4.pull-right.text-righ
-#   = link_to t('Zadej nový dokument', :default => t("helpers.links.new")), upload_document_path, :class => 'btn btn-primary'

- show_actions = @collection.find { |resource| can?(:update, resource) || can?(:destroy, resource) }

- if @link_to_results
  .row
    .col-lg-12.text-center
      %label{style: 'font-size: 1.3em'}Výsledky vašeho vyhledávání si můžete
      %a{href: @link_to_results, class: 'btn btn-info'}Prohlédnout na mapě
  %br


.row
  %form{method: 'get', action: '/documents'}
    .form-group.col-xs-4
      %label{class: 'sr-only', for:"query"}Hledaný výraz
      %input{id: 'query', name: 'query', class: 'form-control', placeholder: 'Hledaný výraz...', value: @query}
    .form-group.col-sm-4
      %label{class: 'sr-only', for:"las"}Samospráva
      %input{class: 'form-control select2-ajax',
        id: 'las',
        name: 'q[local_administration_unit_id_eq]',
        value: @local_administration_unit.id,
        data: { id: @local_administration_unit.id,
          text: @local_administration_unit.title,
          url: '/local_administration_units/options.json', placeholder: 'Územní Samospráva, např.: Olomouc'}}
    .form-group.col-xs-3
      / - test = params[:q].try(:[], :tags_array_contains)
      %label{class: 'sr-only', for: 'category'}Kategorie
      %select{class: 'js-states form-control',
        id: 'category',
        name: 'q[tags_filter][]',
        multiple: 'multiple',
        placeholder: 'Vyberte kategorie'}
        / data: { id: test, text: test}}
        = options_for_select(@categories)
    .form-group.col-xs-1.text-right
      %button{class: 'btn btn-success', type: 'submit'}Hledat

%table.table.table-striped
  %thead
    %tr
      %th Zdroj
      -# %th= sort_link @q, :local_administration_unit_ruian_locable_id
      %th= sort_link(@q, :title)
      %th{data: {toggle: 'tooltip'},
        title: 'Jedná se o datum, kdy byl dokument načten do systému, ve vyjmečných případech se může lišit od data zveřejnění úřadem.'}
        = sort_link(@q, :from_date)
      - if show_actions
        %th=t '.actions', :default => t("helpers.actions")
  %tbody
    - @collection.each.with_index do |resource, idx|
      - record = @elasticsearch ? @records.find { |i| i.id == resource.id.to_i } : resource
      - unless record #in case that elasticsearch indexed already deleted document
        - Rails.logger.warn "Elasticsearch record for document #{resource.id.inspect} should be already deleted"
        - next

      %tr
        %td{class: 'text-nowrap'}= record.local_administration_unit.ruian_locable.nazev
        %td
          -if resource.respond_to?(:highlight)
            = link_to record do
              .title= resource.highlight&.title&.first&.html_safe || resource.title
            .text-muted.text-right= resource.highlight&.plain_text&.first&.html_safe
          - else
            = link_to resource.title, record
<<<<<<< HEAD
          - record.tags.each do |tag|
            %span{ class: 'label label-success label-as-badge'}= tag
        %td{ class: 'text-nowrap'}=l record.from_date.to_date, format: :long
=======
        %td{class: 'text-nowrap'}=l record.from_date.to_date, format: :long
>>>>>>> 69a4496d54868d9fcacc03aa21607ae4caaeea09

        - if show_actions
          %td
            -# = link_to t('.show', :default => t("helpers.links.show")), [resource], :class => 'btn btn-default btn-xs'
            - if can? :update, record
              = link_to t('.edit', :default => t("helpers.links.edit")), [:edit, record], :class => 'btn btn-default btn-xs'
            - if can? :destroy, record
              = link_to t('.destroy', :default => t("helpers.links.destroy")), [record], :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-xs btn-danger'


= paginate @collection
<<<<<<< HEAD

- initData = params[:q].try(:[], :tags_array_contains)

:javascript
  $("#category").select2();

  /* $("#category").select2({
    initSelection: function (elm, callback) {
      callback({id: elm.data('initValue')});
    },
    data: null
  }); */
=======
>>>>>>> 69a4496d54868d9fcacc03aa21607ae4caaeea09
